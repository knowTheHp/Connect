@model Connect.Models.WorkXp

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
</head>
<body>
    <script src="@Url.Content("~/Scripts/jquery-3.1.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <a href="#" id="workXpUpdateModal" data-target="#workxpUpdateModal" data-toggle="modal"><i class="glyphicon glyphicon-pencil"></i></a>
    <div class="modal fade" id="workxpUpdateModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&nbsp;</span></button>
                    <h4 class="modal-title">Update Work Profile</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("WorkExperienceUpdate", "Account", new { @id = "workXpUpdateForm" })) {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.WorkxpId)
                            @Html.HiddenFor(mode => mode.UserId)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Country, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.Country, new SelectList(ViewBag.Countries, "CountryId", "CountryName"), "---Select Country---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("From", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.FromMonth, new SelectList(ViewBag.FromMonth, "MonthId", "MonthName"), "---Select Month---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FromMonth, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @Html.DropDownListFor(model => model.FromYear, new SelectList(ViewBag.FromYear, "YearId", "YearName"), "---Select Year---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FromYear, "", new {
                                   @class = "text-danger"
                               })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @Html.CheckBoxFor(model => model.IsCurrentlyWorking, new { @class = "control-label", @id = "updateIsWorking" })
                                    @Html.LabelFor(model => model.IsCurrentlyWorking, htmlAttributes: new { @class = "control-label" })
                                    @Html.ValidationMessageFor(model => model.IsCurrentlyWorking, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div id="updateWorkXpToggleToMonthAndYear">
                                <div class="form-group">
                                    @Html.Label("To", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.ToMonth, new SelectList(ViewBag.ToMonth, "MonthId", "MonthName"), "---Select Month---", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ToMonth, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        @Html.DropDownListFor(model => model.ToYear, new SelectList(ViewBag.ToYear, "YearId", "YearName"), "---Select Year---", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ToYear, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" id="worxpUpdateBtn" class="btn btn-primary"><i class="fa fa-save">&nbsp;</i>Update</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
