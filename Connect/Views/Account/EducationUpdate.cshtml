@model Connect.Models.Education

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
</head>
<body>
    <a href="#" id="updateDegreeButton" data-target="#updateDegreeModal" data-toggle="modal"><i class="glyphicon glyphicon-pencil"></i></a>
    <div class="modal fade" id="updateDegreeModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&nbsp;</span></button>
                    <h4 class="modal-title">Update Education</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("EducationUpdate","Account",new {@id="updateEduForm" })) {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.EducationId)
                            @Html.HiddenFor(model => model.UserId)
                            <div class="form-group">
                                @Html.LabelFor(model => model.School, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.School, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.School, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DegreeType, "DegreeType", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.DegreeType, new SelectList(ViewBag.Degree, "DegreeId", "DegreeName"), "Select Degree", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DegreeType, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EduFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.EduFrom, new SelectList(ViewBag.FromYear, "YearName", "YearName"), "---From---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EduFrom, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EduTo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.EduTo, new SelectList(ViewBag.ToYear, "YearName", "YearName"), "---To---", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EduTo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Course, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" class="btn btn-primary"><i class="fa fa-save">&nbsp;</i>Update</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
