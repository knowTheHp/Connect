@model Connect.Models.ViewModel.WorkXpVM


@{
    Layout = null;
}
<script src="@Url.Content("~/Scripts/jquery-3.1.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<button id="educationModal" data-target="#workxpModal" data-toggle="modal" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i>Add</button>
<div class="modal fade" id="workxpModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&nbsp;</span></button>
                <h4 class="modal-title">Work Profile</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("WorkExperience", "Account", FormMethod.Post, new { id = "workform" })) {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Country, new SelectList(ViewBag.Countries, "CountryId", "CountryName"), "---Select Country---", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("From", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.FromMonth, new SelectList(ViewBag.FromMonth, "MonthId", "MonthName"), "---Select Month---", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FromMonth, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.DropDownListFor(model => model.FromYear, new SelectList(ViewBag.FromYear, "YearId", "YearName"), "---Select Year---", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FromYear, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div id="toggleFromMonthAndYear">
                        <div class="form-group">
                            @Html.Label("To", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ToMonth, new SelectList(ViewBag.ToMonth, "MonthId", "MonthName"), "---Select Month---", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ToMonth, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.DropDownListFor(model => model.ToYear, new SelectList(ViewBag.ToYear, "YearId", "YearName"), "---Select Year---", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ToYear, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.CheckBox("IsCurrentlyWorking", false, new { @class = "control-label",@id="isWorking" })
                                @Html.LabelFor(model => model.IsCurrentlyWorking, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.IsCurrentlyWorking, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" id="worxpBtn" class="btn btn-primary"><i class="fa fa-save">&nbsp;</i>Save</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
